; PlatformIO template configuration file for MegaCoreX
; https://github.com/MCUdude/MegaCoreX/
;
;   Build options: build flags, source filter
;   Hardware options: oscillator type, BOD, UART number, EEPROM retain
;   Upload options: custom upload port, speed, and extra flags
;   Library options: dependencies, extra library storage
;   Advanced options: extra scripting
;
; Please visit documentation for the other options
; https://github.com/MCUdude/MegaCoreX/blob/master/PlatformIO.md
; https://docs.platformio.org/page/projectconf.html
; https://docs.platformio.org/en/latest/platforms/atmelmegaavr.html

[platformio]
; Default build target
default_envs = ATmega4808

; Parameters used for all environments
[env]
platform = atmelmegaavr
framework = arduino
lib_deps =
            https://github.com/nurazur/BME280/archive/refs/heads/master.zip
            https://github.com/Sensirion/arduino-sht/archive/refs/tags/v1.2.4.zip
            https://github.com/nurazur/OneWire/archive/refs/heads/master.zip
            https://github.com/milesburton/Arduino-Temperature-Control-Library/archive/refs/tags/3.9.1.zip
            https://github.com/nurazur/ADS1120-Library/archive/refs/heads/master.zip
            https://github.com/RobTillaart/MAX6675/archive/refs/tags/0.3.0.zip
            https://github.com/RobTillaart/MAX31855_RT/archive/refs/tags/0.6.0.zip
            symlink://${PROJECT_DIR}/../libraries/TiNo2
            symlink://${PROJECT_DIR}/../libraries/TiNo2_SHT_Sensors
            symlink://${PROJECT_DIR}/../libraries/TiNo2_DS18B20
            symlink://${PROJECT_DIR}/../libraries/HTU21D
            symlink://${PROJECT_DIR}/../libraries/TiNo2_RTD
            symlink://${PROJECT_DIR}/../libraries/TiNo2_Thermocouple


; Monitor port is auto-detected. Override here
monitor_speed = 57600
monitor_dtr = 1
monitor_filters = plotter
upload_port = COM3

; Run the following command to upload with this environment
; pio run  -t upload
[env:Upload_UART]
; Upload protocol for serial uploads (using Optiboot)
upload_protocol = arduino
upload_port = ${env.upload_port}
upload_speed = 115200
upload_flags =

[env:ATmega4808]
; Chip in use
board = ATmega4808
; Clock frequency in [Hz]
board_build.f_cpu = 4000000L
; Oscillator type (internal or external)
board_hardware.oscillator = internal
board_hardware.uart = uart0
; Arduino pinout variant
board_build.variant = 32pin-standard

; Unflag build flags
build_unflags = -w -std=gnu++11
; Extra build flags
build_flags = -Wall -std=gnu++14

; Upload protocol for serial uploads (using Optiboot)
extends = env:Upload_UART
;upload_protocol = arduino
;upload_port = ${env.upload_port}
;upload_speed = 115200
;upload_flags =

[env:AVR64DD32]
; Chip in use
board = AVR64DD32
; Clock frequency in [Hz]
board_build.f_cpu = 4000000L
; Oscillator type (internal or external)
board_hardware.oscillator = internal
board_hardware.uart = uart0
; Arduino pinout variant
board_build.variant = 32pin-ddseries

; Unflag build flags
build_unflags = -w -std=gnu++11
; Extra build flags
build_flags = -Wall -std=gnu++14

; Upload protocol for serial uploads (using Optiboot)
upload_protocol = arduino
upload_port = ${env.upload_port}
upload_speed = 115200
upload_flags =

[env:AVR64DD28]
; Chip in use
board = AVR64DD28
; Clock frequency in [Hz]
board_build.f_cpu = 1000000L
; Oscillator type (internal or external)
board_hardware.oscillator = internal
board_hardware.uart = uart0
; Arduino pinout variant
board_build.variant = 28pin-ddseries

; Unflag build flags
build_unflags = -w -std=gnu++11
; Extra build flags
build_flags =   -Wall
                -Wextra
                -Werror
                -std=gnu++14
; Upload protocol for serial uploads (using Optiboot)
upload_protocol = arduino
upload_port = ${env.upload_port}
upload_speed = 115200
upload_flags =



; Run the following command to upload with this environment
; pio run -e Upload_UPDI -t upload
[env:Upload_UPDI]
; Upload protocol for UPDI upload
upload_protocol = serialupdi
upload_port = ${env.upload_port}
upload_speed = 115200
upload_flags =
  -xrtsdtr=high





; run the following command to set fuses
; pio run -e fuses_bootloader -t fuses
; run the following command to set fuses + burn bootloader
; pio run -e fuses_bootloader -t bootloader
[env:fuses_bootloader]
; Inherit upload settings from the Upload_UPDI environment
extends = env:Upload_UPDI
; Chip in use
board = ATmega4808
; Hardware settings
board_hardware.bod = disabled
board_hardware.eesave = yes
board_hardware.uart = uart0
board_hardware.rstpin = reset
